{"version":3,"sources":["types/TableRows.ts","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonItem/PersonItem.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["TableRows","HomePage","className","Loader","PersonItem","person","slug","useParams","isSelectedPerson","sex","born","died","motherName","fatherName","mother","father","name","isPersonFemale","cn","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","people","setPeople","isError","setIsError","isLoaded","setIsLoaded","useEffect","catch","finally","isPeoplePresent","length","isLoadingError","isTodosEmpty","mappedPeople","useMemo","map","find","possiblyFather","possiblyMother","Object","values","value","PeoplePage","NotFoundPage","PageNavLink","text","isActive","MainNav","role","Layout","App","createHashRouter","path","element","children","index","replace","ReactDOM","createRoot","document","getElementById","render","router"],"mappings":"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","file":"static/js/main.25d93ada.chunk.js","sourcesContent":["export enum TableRows {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonItem: FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n  const isSelectedPerson = person.slug === slug;\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    name,\n  } = person;\n\n  const isPersonFemale = sex === 'f';\n\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={cn(\n          { 'has-background-warning': isSelectedPerson },\n        )}\n      >\n        <td>\n          <Link\n            to={person.slug}\n            className={cn(\n              { 'has-text-danger': isPersonFemale },\n            )}\n          >\n            {name}\n          </Link>\n        </td>\n\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>\n          {mother && (\n            <Link\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </Link>\n          )}\n\n          {!mother && (motherName || '-')}\n        </td>\n\n        <td>\n          {father && (\n            <Link\n              to={`/people/${father.slug}`}\n            >\n              {fatherName}\n            </Link>\n          )}\n\n          {!father && (fatherName || '-')}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  FC, useMemo, useState, useEffect,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { getPeople } from '../../api';\nimport { TableRows } from '../../types/TableRows';\n\nexport const PeopleTable: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoaded(true));\n  }, []);\n\n  const isPeoplePresent = people.length > 0;\n  const isLoadingError = isLoaded && isError;\n  const isTodosEmpty = isLoaded && !isPeoplePresent;\n\n  const mappedPeople = useMemo(() => people.map(person => {\n    const father = people.find(\n      possiblyFather => (possiblyFather.name === person.fatherName),\n    );\n\n    const mother = people.find(\n      possiblyMother => (possiblyMother.name === person.motherName),\n    );\n\n    return { ...person, father, mother };\n  }), [people]);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {!isLoaded && <Loader />}\n\n        {(isLoadingError) && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {(isTodosEmpty) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {isPeoplePresent && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                {(Object.values(TableRows)).map(value => (\n                  <th key={value}>\n                    {value}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <tbody>\n              {mappedPeople.map(person => (\n                <PersonItem\n                  person={person}\n                  key={person.slug}\n                />\n              ))}\n            </tbody>\n\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport cn from 'classnames';\n\nexport interface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { MainNav } from '../MainNav/MainNav';\n\nexport const Layout: FC = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './App.scss';\nimport { Navigate, createHashRouter } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Layout } from './components/Layout/Layout';\n\nexport const App = createHashRouter([\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      {\n        index: true,\n        element: <HomePage />,\n      },\n\n      {\n        path: 'home',\n        element: <Navigate to=\"/\" replace />,\n      },\n\n      {\n        path: 'people',\n        element: <PeoplePage />,\n        children: [\n          {\n            path: ':slug',\n            element: <PeoplePage />,\n          },\n        ],\n      },\n      {\n        path: '*',\n        element: <NotFoundPage />,\n      },\n    ],\n  },\n]);\n","import ReactDOM from 'react-dom/client';\nimport { RouterProvider } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.createRoot(document.getElementById('root') as Element).render(\n  <RouterProvider router={App} />,\n);\n"],"sourceRoot":""}